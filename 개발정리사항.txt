* 강의 내용
    - Vuex
    - Vue-Router
    - Axios
    - Dragula 

* 구현 사항
    - 인증 : 로그인, 로그아웃
    - 보드 작업 : 보드, 리스트, 카드  생성, 조회, 수정(타이틀 색상), 이동, 삭제
        - 보드     : 생성, 조회, 수정(타이틀, 색상), 이동, 삭제
        - 리스트   : 생성, 수정(타이틀), 이동, 삭제
        - 카드     : 생성, 조회, 수정(타이틀, 설명), 이동, 삭제

* 기본 플로우
    - 홈페이지 접속 
    - 로그인 페이지(성공) 
    - 홈페이지 리다이렉트 
    - 보드 목록 조회 
    - 보드 생성 
    - 보드 조회(Todo, Doing, Done)
    - 카드 생성 
    - 카드 상세 조회(Modal)
        - 카드 수정
    - 카드 이동
    - 카드 삭제
    - 우측 사이드바에서 보드 세팅 : 색상 변경
    - 보드 삭제 -> 홈으로 이동

* 추가 기능
    - 보드 수정 : 색상 변경, 타이틀 변경
    - 리스트 생성 
    - 리스트 수정 : 타이틀 변경
    - 리스트 이동
    - 리스트 삭제

* 코드 스캐폴딩
    - npm install -g vue-cli  => npm 인스톨 및 vue-cli 설치
    - vue init webpack-simple => 프로젝트 생성
    - 생성 후 npm i 혹은 npm install로 실행을 하면 기본적으로 설정된 라이브러리들을 다운로드 받는다.
    - npm run dev로 실행을 한 후 http://localhost:8080/ 로 접속을 하면 화면이 뜨게 되어 있다.

* router
    - 서버라우팅        -> 매번 주소를 요청할 때마다 갱신(ex: 네이버, 구글)
    - 브라우져 라우팅   -> 매번 주소를 요청할 때마다 갱신되지 않고 데이터를 받아서 갱신하는 방법(ex: 구글메일, 트렐로)

** 라우팅이란
    - 어떤 네트워크 안에서 통신 데이터를 보낼 경로를 선택하는 과정이다.

* vue-router를 사용하는 방법
    - npm i vue-router --save-dev

* 소스 구현 하면서 나온 현상
    - /#/이 붙어서 http://localhost:8080/login/ 으로 다시 접속을 하여도 http://localhost:8080/login#/ 이라고 변경이 되고 정상적으로 동작이 되지 않았음.
        - http://localhost:8080/#/login으로 들어가야 했다.
    - # 가 붙는 현상은 hash mode로 인한 것으로 이 부분은 url을 별도로 저장을 하지 않는 부분에서 일어난 현상으로 vue-router의 기본 모드는 hash mode를 사용한다.
      URL 해시를 사용하여 전체 URL을 시뮬레이트하므로 URL이 변경될 때 페이지가 다시 로드 되지 않습니다.
    - 해시를 제거하기 위해서는 우터의 history 모드 를 사용하면 해결이 된다.
        //라우터 사용
        const router = new VueRouter({
            mode: 'history',
            ......
        })





    